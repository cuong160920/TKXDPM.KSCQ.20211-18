SET statement_timeout = 0;
SET LOCK_TIMEOUT = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = ON;

SELECT pg_catalog.set_config('search_path', '', false);

SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = OFF;
SET default_tablespace = '';

CREATE EXTENSION IF NOT EXISTS adminpack WITH SCHEMA pg_catalog;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA PUBLIC;
DROP TABLE IF EXISTS PUBLIC.dock;
DROP TABLE IF EXISTS PUBLIC.bike;
DROP TABLE IF EXISTS PUBLIC.e_bike;
DROP TABLE IF EXISTS PUBLIC.session;
DROP TABLE IF EXISTS PUBLIC.invoice;
DROP TABLE IF EXISTS PUBLIC.paymenttransaction;
DROP TABLE IF EXISTS PUBLIC.card;

CREATE TABLE PUBLIC.dock (
	id uuid DEFAULT PUBLIC.uuid_generate_v4() NOT NULL
	, name VARCHAR(25) NOT NULL
	, location TEXT NOT NULL
	, imageURL TEXT NOT NULL
	, capacity INTEGER NOT NULL DEFAULT 0
	, createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
	, availability INTEGER NOT NULL
	);

ALTER TABLE PUBLIC.dock OWNER TO postgres;

CREATE TABLE PUBLIC.bike (
	id uuid NOT NULL DEFAULT PUBLIC.uuid_generate_v4()
	, barcode uuid NOT NULL DEFAULT PUBLIC.uuid_generate_v4()
	, dockId uuid NOT NULL
	, licensePlate VARCHAR(10) NOT NULL
	, charge INTEGER NOT NULL
	, type VARCHAR(20) NOT NULL
	, createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
	, imageURL TEXT NOT NULL
	, deposit INTEGER NOT NULL
	, seatNum INTEGER NOT NULL
	, pedalNum INTEGER NOT NULL
	, saddleNum INTEGER NOT NULL
	);

ALTER TABLE PUBLIC.bike OWNER TO postgres;

CREATE TABLE PUBLIC.e_bike (
	id uuid NOT NULL
	, battery INTEGER NOT NULL
	, timeRemain TIME NOT NULL
	);

ALTER TABLE PUBLIC.e_bike OWNER TO postgres;

CREATE TABLE PUBLIC.session (
	id uuid NOT NULL DEFAULT PUBLIC.uuid_generate_v4()
	, bikeId uuid NOT NULL
	, rentDockId uuid NOT NULL
	, returnDockId uuid NOT NULL
	, startTime TIMESTAMP NOT NULL
	, endTime TIMESTAMP
	, isEnd boolean NOT NULL
	);

ALTER TABLE PUBLIC.session OWNER TO postgres;

CREATE TABLE PUBLIC.invoice (
	id uuid NOT NULL DEFAULT PUBLIC.uuid_generate_v4()
	,sessionId uuid NOT NULL
	,createAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
	,type VARCHAR(20) NOT NULL
	,totalCharge INTEGER NOT NULL
	);

ALTER TABLE PUBLIC.invoice OWNER TO postgres;

CREATE TABLE PUBLIC.paymentTransaction (
	id uuid NOT NULL DEFAULT PUBLIC.uuid_generate_v4()
	,cardId uuid NOT NULL
	,createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
	,contents TEXT
	,method VARCHAR(25) NOT NULL
	,amount INTEGER NOT NULL
	,invoiceId UUID NOT NULL
	);

ALTER TABLE PUBLIC.paymentTransaction OWNER TO postgres;

CREATE TABLE PUBLIC.card (
	id uuid NOT NULL DEFAULT PUBLIC.uuid_generate_v4()
	, cardNum VARCHAR(12) NOT NULL
	, cardOwner VARCHAR(25) NOT NULL
	, issuingBank VARCHAR(20) NOT NULL
	, expiredDate DATE NOT NULL
	, securityCode VARCHAR(20) NOT NULL
	);

ALTER TABLE PUBLIC.card OWNER TO postgres;

INSERT VALUES INTO SOME TABLES

-- DOCK
INSERT INTO PUBLIC.dock (
	name
	, location
	, imageURL
	, capacity
	, availability
	)
	VALUES (
		'ECO Bike Park 1'
		, 'Location 1'
		, ''
		, 200
		, 10
	 )
	,(
		'ECO Bike Park 2'
		, 'Location 2'
		, ''
		, 150
		, 15
	)
	,(
		'ECO Bike Park 3'
		, 'Location 3'
		, ''
		, 100
		, 20
	);

-- BIKE
INSERT INTO PUBLIC.bike (
	dockId
	, licensePlate
	, charge
	, type
	, imageURL
	, deposit
	, seatNum
	, pedalNum
	, saddleNum
	)
	VALUES (
		'd33190a0-5674-4951-93ad-cbee666edb12'
		, '30MD1-1234'
		, 10000
		, 'Xe đạp điện'
		, ''
		, 200000
		, 2
		, 1
		, 1
	)
	,(
		'70c784e0-3916-48b1-a309-3ff6853dd98c'
		, ''
		, 5000
		, 'Xe đạp'
		, ''
		, 50000
		, 1
		, 1
		, 1
	);

-- E_Bike
INSERT INTO PUBLIC.e_bike (
	id
	, battery
	, timeRemain
	)
	VALUES (
		'dff53949-73db-494b-a8eb-57e5738918bc'
		, 70
		, '08:00:00'
	);

-- ADD PRIMARY KEY

ALTER TABLE ONLY PUBLIC.dock ADD CONSTRAINT dock_pk PRIMARY KEY (id);

ALTER TABLE ONLY PUBLIC.bike ADD CONSTRAINT bike_pk PRIMARY KEY (id);

ALTER TABLE ONLY PUBLIC.e_bike ADD CONSTRAINT e_bike_pk PRIMARY KEY (id);

ALTER TABLE ONLY PUBLIC.session ADD CONSTRAINT session_pk PRIMARY KEY (id);

ALTER TABLE ONLY PUBLIC.invoice ADD CONSTRAINT invoice_pk PRIMARY KEY (id);

ALTER TABLE ONLY PUBLIC.paymenttransaction ADD CONSTRAINT payment_transaction_pk PRIMARY KEY (id);

ALTER TABLE ONLY PUBLIC.card ADD CONSTRAINT card_pk PRIMARY KEY (id);

-- ADD FOREIGN KEY

ALTER TABLE ONLY PUBLIC.bike ADD CONSTRAINT bike_fk FOREIGN KEY (dockid) REFERENCES PUBLIC.dock (id) ON DELETE CASCADE;

ALTER TABLE ONLY PUBLIC.e_bike ADD CONSTRAINT e_bike_fk FOREIGN KEY (id) REFERENCES PUBLIC.bike (id) ON DELETE CASCADE;

ALTER TABLE ONLY PUBLIC.session ADD CONSTRAINT session_fk1 FOREIGN KEY (bikeId) REFERENCES PUBLIC.bike (id);

ALTER TABLE ONLY PUBLIC.session ADD CONSTRAINT session_fk2 FOREIGN KEY (rentdockid) REFERENCES PUBLIC.dock (id);

ALTER TABLE ONLY PUBLIC.session ADD CONSTRAINT session_fk3 FOREIGN KEY (returndockid) REFERENCES PUBLIC.dock (id);

ALTER TABLE ONLY PUBLIC.invoice ADD CONSTRAINT invoice_fk FOREIGN KEY (sessionid) REFERENCES PUBLIC.session (id);

ALTER TABLE ONLY PUBLIC.paymenttransaction ADD CONSTRAINT payment_transaction_fk1 FOREIGN KEY (cardid) REFERENCES PUBLIC.card (id);

ALTER TABLE ONLY PUBLIC.paymenttransaction ADD CONSTRAINT payment_transaction_fk2 FOREIGN KEY (invoiceid) REFERENCES PUBLIC.invoice (id);